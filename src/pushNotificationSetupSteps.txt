Firebase push notification

Web ma project create and native configuration:

firebase.google.com site open karo

Ama go to console 

In console add new project (it will create new project)

Configure project with android and iOS

Get your package name(application Id/bundle id) inside android/app/build.gradle

Add this package name in side android app register and register your app

Now download google-service.json and then put this file inside android/app/

Inside android/build.gradle paste the following line in dependency at the end
classpath 'com.google.gms:google-services:4.4.1'

Inside android/app/build.gradle add following line for plugin 
apply plugin: 'com.google.gms.google-services'

And inside dependency add the following lines
implementation platform('com.google.firebase:firebase-bom:33.0.0')
 implementation 'com.google.firebase:firebase-analytics'


=============================================

React native configuration:

Open this site: https://rnfirebase.io/messaging/usage

Install package

@react-native-firebase/app
@react-native-firebase/messaging
@notifee/react-native

For background mode add following code in index.js (paste above the AppRegistry)
// for background and quite mode push notification
messaging().setBackgroundMessageHandler(async remoteMessage => {
  console.log('Message handled in the background!', remoteMessage);
});


For foreground mode add following code inside App.tsx
  useEffect(() => {
    notifee.requestPermission();
    getFCMToken();
    // for forground mode push notification
    const unsubscribe = messaging().onMessage(async remoteMessage => {
      console.log(
        'A new FCM message arrived!',
        JSON.stringify(remoteMessage, 0, 2),
      );
      // Create a channel (required for Android)
      const channelId = await notifee.createChannel({
        id: 'default',
        name: 'Default Channel',
      });

      // Display a notification
      await notifee.displayNotification({
        title: remoteMessage?.notification?.title,
        body: remoteMessage?.notification?.body,
        android: {
          channelId,
          // pressAction is needed if you want the notification to open the app when pressed
          pressAction: {
            id: 'default',
          },
        },
      });
    });

    return unsubscribe;
  }, []);